name: Rust
on: [push, pull_request]
env:
  CARGO_TERM_COLOR: always
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install gtk deps
        run: sudo apt update && sudo apt install -y libatk1.0-dev libpango1.0-dev libgtk-4-dev libadwaita-1-dev
      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
            toolchain: stable
      - uses: Swatinem/rust-cache@v2
        with:
          # An explicit cache key that is used instead of the automatic `job`-based
          # cache key and is thus stable across jobs.
          # Default: empty
          shared-key: ""

          # An additional cache key that is added alongside the automatic `job`-based
          # cache key and can be used to further differentiate jobs.
          # Default: empty
          key: ""

          # A whitespace separated list of env-var *prefixes* who's value contributes
          # to the environment cache key.
          # The env-vars are matched by *prefix*, so the default `RUST` var will
          # match all of `RUSTC`, `RUSTUP_*`, `RUSTFLAGS`, `RUSTDOC_*`, etc.
          # Default: "CARGO CC CFLAGS CXX CMAKE RUST"
          env-vars: ""

          # The cargo workspaces and target directory configuration.
          # These entries are separated by newlines and have the form
          # `$workspace -> $target`. The `$target` part is treated as a directory
          # relative to the `$workspace` and defaults to "target" if not explicitly given.
          # Default: ". -> target"
          workspaces: ""

          # Determines if the cache should be saved even when the workflow has failed.
          # Default: "false"
          cache-on-failure: ""
      - name: Build
        # CI runs Ubuntu Jammy, which has gtk4.6, so we can't enable gtk4.8.
        run: cargo build --no-default-features -F gtk --verbose
      - name: Run tests
        uses: coactions/setup-xvfb@v1
        with:
          run: cargo test --no-default-features -F gtk --verbose
